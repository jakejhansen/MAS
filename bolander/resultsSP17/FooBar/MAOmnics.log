blue: 0,A,E,H,K,N,Q
red: 1,B,F,I,L,O,R
green: 2,C,G,J,M,P,S
+++++++++++++++++++++++++++++
+BAC     +ONP            GEF+
++++     ++++            ++++
+LKM     0  1  2         JHI+
++++                     ++++
+                           ++++++++++
+                            s  r  q +
+S+                         ++++++++++
+Q+                         +
+R+                         +
++++++ +++ +++++++ +++ +++ ++
     + + + +     + + + + + +
     +p+ +m+     +j+ +g+ +c+
     + + + +     + + + + + +
     +o+ +l+     +i+ +f+ +b+
     + + + +     + + + + + +
     +n+ +k+     +h+ +e+ +a+
     + + + +     + + + + + +
     +++ +++     +++ +++ +++

[NoOp, NoOp, Move(N)];610
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[NoOp, NoOp, Move(E)];0
[Move(E), NoOp, Pull(S,E)];0
[Move(S), NoOp, Pull(W,N)];0
[Move(E), NoOp, Push(E,S)];0
[Move(E), NoOp, Push(S,S)];0
[Move(E), NoOp, Move(N)];0
[Move(N), NoOp, Move(W)];0
[Move(N), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(N)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Move(W)];0
[Move(E), NoOp, Pull(E,W)];0
[Move(N), NoOp, Pull(E,W)];0
[Move(E), NoOp, Pull(S,W)];0
[Pull(W,E), NoOp, Move(S)];0
[Pull(S,E), NoOp, Move(W)];0
[Pull(W,N), NoOp, Move(W)];0
[Pull(W,E), NoOp, Move(S)];0
[Pull(S,E), NoOp, Move(W)];0
[Pull(S,N), NoOp, Move(W)];0
[Pull(S,N), NoOp, Move(N)];0
[Pull(E,N), NoOp, Move(W)];0
[Push(W,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Pull(E,W)];0
[Push(S,S), NoOp, Pull(E,W)];0
[Push(S,S), NoOp, Pull(S,W)];0
[Push(S,S), NoOp, Move(E)];0
[Push(S,S), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(N)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Pull(N,E)];0
[Move(W), NoOp, Pull(N,S)];0
[Move(W), NoOp, Push(S,W)];0
[Move(W), NoOp, Move(S)];0
[Move(N), NoOp, Move(W)];0
[Move(N), NoOp, Move(W)];0
[Move(W), NoOp, Move(W)];0
[Pull(E,W), NoOp, Move(W)];0
[Pull(S,W), NoOp, Move(W)];0
[Pull(S,N), NoOp, Move(W)];0
[Pull(S,N), NoOp, Move(S)];0
[Pull(S,N), NoOp, Move(S)];0
[Pull(W,N), Move(E), Move(S)];0
[Pull(S,E), Move(N), Move(W)];0
[Pull(S,N), Move(N), Move(W)];0
[Pull(S,N), Move(W), Move(W)];0
[Push(N,W), Move(W), Move(W)];0
[Push(W,W), NoOp, Move(W)];0
[Push(W,S), NoOp, Move(W)];0
[Push(S,W), NoOp, Move(W)];0
[Push(W,W), NoOp, Move(W)];0
[Push(W,W), NoOp, Move(W)];0
[Push(W,S), NoOp, Move(W)];0
[Push(S,W), NoOp, Move(W)];0
[Push(W,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Move(W)];0
[Push(S,S), NoOp, Pull(N,S)];0
[Move(N), NoOp, Pull(E,S)];0
[Move(N), NoOp, Pull(E,W)];0
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(N)];0
[Move(N), NoOp, Move(N)];0
[Move(N), Pull(E,W), Move(N)];0
[Move(N), Pull(E,W), Move(N)];0
[Move(W), Pull(S,W), NoOp];0
[Move(N), Pull(S,N), NoOp];0
[Move(N), Pull(S,N), NoOp];0
[Move(N), Pull(S,N), NoOp];0
[Move(N), Pull(W,N), NoOp];0
[Move(W), Pull(S,E), NoOp];0
[Move(N), Pull(S,N), NoOp];0
[Move(W), Pull(W,N), NoOp];0
[Pull(E,W), Pull(S,E), NoOp];0
[Pull(N,W), Push(N,W), NoOp];0
[Push(S,S), Push(W,S), Pull(E,W)];0
[Push(S,E), Push(S,W), Push(W,S)];0
[Push(E,S), Push(W,W), Push(S,S)];0
[Push(S,E), Push(W,W), Push(S,W)];0
[Push(E,S), Push(W,W), NoOp];0
[Push(S,E), Push(W,S), NoOp];0
[Push(E,S), Push(S,S), NoOp];0
[Push(S,E), Push(S,S), NoOp];0
[Push(E,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,E), Push(S,S), NoOp];0
[Push(E,E), Move(N), NoOp];0
[Push(E,S), Move(N), NoOp];0
[Push(S,S), Move(N), NoOp];0
[Push(S,S), Move(N), NoOp];0
[Push(S,S), Move(E), NoOp];0
[Push(S,S), Move(E), NoOp];0
[Push(S,S), Move(E), NoOp];0
[Push(S,S), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(N), Move(N), NoOp];0
[Move(N), Move(N), NoOp];0
[Move(N), Move(N), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(N), NoOp];0
[Move(E), Move(N), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(N), NoOp];0
[Move(N), Move(N), NoOp];0
[Move(E), Move(N), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(E), Move(E), NoOp];0
[Move(N), Move(E), NoOp];0
[Move(E), NoOp, NoOp];0
[Move(E), NoOp, NoOp];0
[Move(E), NoOp, NoOp];0
[Pull(W,E), NoOp, NoOp];0
[Pull(W,E), NoOp, NoOp];0
[Pull(W,E), NoOp, NoOp];0
[Pull(W,E), NoOp, NoOp];0
[Pull(W,E), Pull(W,E), NoOp];0
[Push(E,S), Pull(W,E), NoOp];0
[Push(S,W), Pull(S,E), NoOp];0
[Push(W,W), Pull(S,N), NoOp];0
[Push(W,W), Pull(W,N), NoOp];0
[Push(W,S), Pull(W,E), NoOp];0
[Push(S,S), Push(E,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,W), NoOp];0
[Push(S,S), Push(W,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Push(S,S), Push(S,S), NoOp];0
[Move(N), Push(S,S), NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(S), NoOp, NoOp];0
[Pull(N,S), NoOp, NoOp];0
[Pull(E,S), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(S,W), NoOp, NoOp];0
[Push(N,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Move(W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, Pull(S,W)];0
[Pull(S,W), NoOp, Push(N,N)];0
[Pull(E,N), NoOp, Push(N,N)];0
[Pull(E,W), NoOp, Pull(E,N)];0
[Pull(S,W), NoOp, Pull(E,W)];0
[Pull(E,N), NoOp, Pull(E,W)];0
[Pull(S,W), NoOp, Pull(S,W)];32
[Pull(S,N), NoOp, Pull(E,N)];0
[Pull(E,N), NoOp, Pull(E,W)];0
[Pull(S,W), NoOp, Pull(S,W)];0
[Pull(E,N), NoOp, Pull(E,N)];0
[Pull(E,W), NoOp, Pull(E,W)];0
[Pull(E,W), NoOp, Pull(E,W)];0
[Pull(E,W), NoOp, Move(E)];0
[Pull(E,W), NoOp, Move(E)];0
[Pull(E,W), NoOp, Move(E)];0
[Pull(E,W), NoOp, Move(E)];0
[Pull(N,W), NoOp, Move(E)];0
[Push(S,E), NoOp, Move(E)];0
[Push(E,E), NoOp, Move(E)];0
[Push(E,E), NoOp, Move(E)];0
[Push(E,E), NoOp, Move(E)];0
[Push(E,E), NoOp, Move(E)];0
[Push(E,E), NoOp, Move(E)];0
[Push(E,E), NoOp, NoOp];0
[Push(E,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), Push(E,S)];0
[NoOp, Move(N), Push(S,W)];0
[NoOp, Move(N), Push(W,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,W)];0
[NoOp, Move(W), Push(W,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(N), Push(S,S)];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(S,W), NoOp];0
[NoOp, Pull(E,N), NoOp];0
[NoOp, Pull(S,W), NoOp];0
[NoOp, Pull(W,N), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,E), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Move(E), NoOp];0
[NoOp, Pull(W,E), NoOp];0
[NoOp, Pull(W,E), NoOp];0
[NoOp, Pull(W,E), NoOp];0
[NoOp, Pull(W,E), NoOp];0
[NoOp, Pull(W,E), Move(N)];0
[NoOp, Pull(W,E), Move(N)];0
[NoOp, Pull(W,E), Move(N)];0
[NoOp, Pull(W,E), Move(N)];0
[NoOp, Pull(S,E), Move(E)];0
[NoOp, Pull(S,N), Move(N)];0
[NoOp, Pull(S,N), Move(N)];0
[NoOp, Pull(W,N), Move(N)];0
[NoOp, Push(E,S), Move(N)];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(W,N)];0
[NoOp, Move(W), Pull(S,E)];0
[NoOp, Move(W), Pull(W,N)];0
[NoOp, Move(W), Pull(S,E)];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(W,N)];0
[NoOp, Move(W), Pull(S,E)];0
[NoOp, Move(W), Pull(W,N)];0
[NoOp, Move(W), Pull(W,E)];0
[NoOp, Move(W), Pull(N,E)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(W)];0
[NoOp, Move(W), Move(W)];0
[NoOp, Move(W), Move(W)];0
[NoOp, Move(S), Move(W)];0
[NoOp, Move(S), Move(W)];0
[NoOp, Pull(N,S), Move(W)];0
[NoOp, Pull(N,S), Move(W)];0
[NoOp, Pull(E,S), Move(W)];0
[NoOp, Pull(E,W), Move(N)];0
[NoOp, Pull(E,W), Move(W)];0
[NoOp, Pull(E,W), Move(N)];0
[NoOp, Pull(E,W), Move(W)];0
[NoOp, Pull(E,W), Move(N)];0
[NoOp, Pull(S,W), Move(N)];0
[NoOp, Push(N,E), Move(W)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Push(W,S)];0
[NoOp, Push(E,E), Push(S,E)];0
[NoOp, Push(E,E), Push(E,S)];0
[NoOp, Push(E,E), Push(S,E)];0
[NoOp, Push(E,E), Push(E,S)];0
[NoOp, Push(E,E), Push(S,S)];0
[NoOp, Push(E,E), Push(S,S)];0
[NoOp, Push(E,E), Push(S,S)];0
[NoOp, Push(E,E), Push(S,E)];0
[NoOp, Push(E,E), Push(E,E)];0
[NoOp, Push(E,E), Push(E,S)];0
[NoOp, Push(E,E), Push(S,S)];0
[NoOp, Push(E,E), Push(S,S)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Move(E)];0
[NoOp, Push(E,E), Move(N)];16
[NoOp, Push(E,E), Move(E)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Move(N)];0
[NoOp, Push(E,E), Move(E)];0
[NoOp, Push(E,E), Move(E)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Pull(W,E)];0
[NoOp, Move(W), Pull(S,E)];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(W,N)];0
[NoOp, Move(W), Pull(S,E)];0
[NoOp, Move(W), Pull(E,N)];0
[NoOp, Move(N), Push(W,S)];0
[NoOp, Move(W), Push(S,W)];0
[NoOp, Move(W), Push(W,W)];0
[NoOp, Move(W), Push(W,W)];0
[NoOp, Move(W), Push(W,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,W)];0
[NoOp, Move(N), Push(W,W)];0
[NoOp, Move(W), Push(W,S)];0
[NoOp, Move(N), Push(S,S)];0
[NoOp, Move(W), Push(S,W)];0
[NoOp, Move(W), Push(W,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(W), Move(W)];0
[NoOp, Move(W), Move(W)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(W)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Pull(E,W), Push(W,S)];0
[NoOp, Pull(E,W), Push(S,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(S,N), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(E,W), Push(E,E)];0
[NoOp, Pull(S,W), Push(E,E)];0
[NoOp, Pull(E,N), Push(E,E)];0
[NoOp, Pull(N,W), Move(W)];0
[NoOp, Push(S,E), Move(W)];0
[NoOp, Push(E,S), Move(W)];0
[NoOp, Push(S,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(S,W)];0
[NoOp, NoOp, Pull(E,N)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(S,W)];0
[NoOp, NoOp, Pull(E,N)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(S,W)];0
[NoOp, NoOp, Pull(E,N)];0
[NoOp, NoOp, Pull(E,W)];0
[NoOp, NoOp, Pull(S,W)];0
[NoOp, NoOp, Pull(E,N)];0
[NoOp, NoOp, Push(W,S)];0
[NoOp, NoOp, Push(S,S)];0
[NoOp, NoOp, Push(S,S)];0
[NoOp, NoOp, Push(S,S)];0
0559df73b458bf317df4a2e3eb5c386bce3fa048
successful
658
579
25ea67f954bb3b3215fe865cb31cd350ee31af2e
1495040468470
