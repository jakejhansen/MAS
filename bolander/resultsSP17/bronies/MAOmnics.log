blue: 0,A,E,H,K,N,Q
red: 1,B,F,I,L,O,R
green: 2,C,G,J,M,P,S
+++++++++++++++++++++++++++++
+BAC     +ONP            GEF+
++++     ++++            ++++
+LKM     0  1  2         JHI+
++++                     ++++
+                           ++++++++++
+                            s  r  q +
+S+                         ++++++++++
+Q+                         +
+R+                         +
++++++ +++ +++++++ +++ +++ ++
     + + + +     + + + + + +
     +p+ +m+     +j+ +g+ +c+
     + + + +     + + + + + +
     +o+ +l+     +i+ +f+ +b+
     + + + +     + + + + + +
     +n+ +k+     +h+ +e+ +a+
     + + + +     + + + + + +
     +++ +++     +++ +++ +++

[NoOp, NoOp, Move(W)];78
[NoOp, NoOp, Move(W)];10
[NoOp, NoOp, Move(S)];4
[NoOp, NoOp, Move(W)];3
[NoOp, NoOp, Move(W)];3
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(S)];2
[NoOp, NoOp, Move(W)];3
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(W)];2
[NoOp, NoOp, Move(S)];2
[NoOp, NoOp, Pull(N,S)];22
[NoOp, NoOp, Push(S,E)];5
[NoOp, NoOp, Push(E,N)];5
[NoOp, NoOp, Move(E)];8
[NoOp, NoOp, Move(S)];2
[NoOp, NoOp, Move(S)];4
[Move(W), NoOp, NoOp];13
[Move(W), NoOp, NoOp];3
[Move(W), NoOp, NoOp];5
[Move(W), NoOp, NoOp];3
[Move(W), NoOp, NoOp];2
[Move(S), NoOp, NoOp];2
[Move(S), NoOp, NoOp];3
[Move(W), NoOp, NoOp];2
[Move(S), NoOp, NoOp];4
[Move(W), NoOp, NoOp];3
[Move(W), NoOp, NoOp];2
[Move(S), NoOp, NoOp];3
[Pull(N,S), NoOp, NoOp];25
[Pull(N,S), NoOp, NoOp];2
[Push(S,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];2
[Push(E,E), NoOp, NoOp];5
[Push(E,E), NoOp, NoOp];4
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];4
[Push(E,E), NoOp, NoOp];4
[Push(E,E), NoOp, NoOp];3
[Push(E,E), NoOp, NoOp];5
[Push(E,E), NoOp, NoOp];4
[Push(E,E), NoOp, NoOp];5
[Push(E,E), Move(W), NoOp];3
[Push(E,E), Move(W), NoOp];2
[NoOp, Move(W), Move(E)];2
[NoOp, Move(W), Move(E)];1
[NoOp, Move(W), Move(E)];0
[NoOp, Move(W), Move(E)];1
[NoOp, Move(W), Move(E)];0
[NoOp, Move(W), Move(E)];1
[NoOp, Move(S), Move(E)];0
[NoOp, Move(S), Move(E)];1
[NoOp, Move(W), Move(E)];0
[NoOp, Move(S), Move(E)];1
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];1
[NoOp, Move(S), Move(N)];0
[NoOp, Move(S), Move(N)];1
[NoOp, Pull(N,S), Move(N)];9
[NoOp, Pull(N,S), Move(N)];0
[NoOp, Pull(E,S), Move(N)];1
[NoOp, Pull(E,W), Pull(E,W)];1
[NoOp, Pull(E,W), Pull(S,W)];0
[NoOp, Pull(E,W), Push(N,E)];1
[NoOp, Pull(E,W), NoOp];1
[Move(W), Pull(N,W), NoOp];2
[Move(W), Push(S,E), NoOp];2
[Move(W), Push(E,E), NoOp];1
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];1
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];3
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];2
[Move(W), Push(E,E), NoOp];1
[Move(W), Push(E,E), NoOp];1
[Move(W), Push(E,E), NoOp];1
[Move(N), NoOp, NoOp];10
[Move(W), NoOp, NoOp];1
[Move(W), NoOp, NoOp];1
[Move(W), NoOp, NoOp];2
[Move(W), NoOp, NoOp];1
[Move(W), NoOp, NoOp];1
[Move(W), NoOp, NoOp];1
[Move(W), NoOp, NoOp];2
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];2
[Move(W), NoOp, NoOp];2
[Pull(E,W), NoOp, NoOp];13
[Pull(S,W), NoOp, NoOp];2
[Pull(S,N), NoOp, NoOp];2
[Pull(W,N), NoOp, NoOp];2
[Pull(S,E), NoOp, NoOp];1
[Pull(S,N), NoOp, NoOp];2
[Pull(S,N), NoOp, NoOp];1
[Pull(E,N), NoOp, NoOp];1
[Push(W,W), NoOp, NoOp];1
[Push(W,W), NoOp, NoOp];2
[Push(W,W), NoOp, NoOp];1
[Push(W,W), NoOp, NoOp];1
[Push(W,W), NoOp, NoOp];1
[Push(W,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,W), NoOp, NoOp];1
[Push(W,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];2
[Push(S,S), NoOp, NoOp];1
[NoOp, Push(E,E), Move(W)];4
[NoOp, Push(E,E), Move(S)];1
[NoOp, Push(E,E), Move(S)];0
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];1
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];1
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];1
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Move(W)];0
[NoOp, Push(E,E), Pull(S,W)];1
[NoOp, Move(W), Push(N,N)];1
[NoOp, Move(W), Push(N,N)];1
[NoOp, Move(W), NoOp];1
[Move(N), Move(W), Move(S)];1
[Move(N), Move(W), Move(S)];0
[Move(N), Move(W), Move(S)];0
[Move(N), Move(W), Move(W)];0
[Move(N), Move(W), NoOp];0
[Move(N), Move(W), NoOp];1
[Move(W), Move(W), NoOp];0
[Move(W), Move(W), NoOp];1
[Move(N), Move(W), NoOp];0
[Move(N), Move(W), NoOp];0
[Move(N), Move(W), NoOp];1
[Move(N), Move(W), NoOp];0
[Move(N), Move(W), NoOp];1
[Move(N), Move(W), NoOp];0
[Move(W), Move(W), NoOp];0
[Pull(E,W), Move(N), NoOp];8
[Pull(S,W), Move(N), NoOp];1
[Push(N,E), Move(N), NoOp];0
[Push(E,S), Move(N), NoOp];1
[Push(S,E), Move(N), NoOp];0
[Push(E,E), Move(W), NoOp];0
[Push(E,E), Move(W), NoOp];1
[Push(E,E), Pull(E,W), NoOp];9
[Push(E,S), Pull(E,W), NoOp];0
[Push(S,E), Pull(S,W), NoOp];1
[Push(E,S), Pull(S,N), NoOp];0
[Push(S,S), Pull(W,N), NoOp];0
[Push(S,S), Pull(S,E), NoOp];1
[Push(S,S), Pull(W,N), NoOp];0
[Push(S,S), Pull(W,E), NoOp];1
[Push(S,S), NoOp, Pull(S,W)];8
[Push(S,S), NoOp, Push(N,E)];0
[Push(S,S), NoOp, Push(E,E)];1
[Push(S,S), NoOp, Push(E,E)];0
[Push(S,S), NoOp, Push(E,E)];1
[Push(S,S), NoOp, Push(E,S)];0
[NoOp, Pull(S,E), Push(S,E)];8
[NoOp, Pull(W,N), Push(E,E)];0
[NoOp, Pull(W,E), Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];1
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];1
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Pull(S,E)];1
[NoOp, NoOp, Push(N,N)];0
[NoOp, NoOp, Push(N,N)];0
[Move(N), Pull(W,E), NoOp];7
[Move(N), Pull(S,E), NoOp];0
[Move(N), Pull(W,N), NoOp];0
[Move(N), Pull(W,E), NoOp];1
[Move(N), Push(E,S), NoOp];1
[Move(N), Push(S,S), NoOp];1
[Move(E), Push(S,S), NoOp];0
[Move(E), Push(S,S), NoOp];1
[Move(E), Push(S,S), NoOp];1
[Move(E), Push(S,S), NoOp];0
[Move(E), Push(S,S), NoOp];1
[Move(E), Push(S,S), Move(W)];1
[Move(E), Move(N), Move(W)];1
[Move(E), Move(N), Move(W)];0
[Move(E), Move(N), Move(W)];0
[Move(E), Move(N), Move(W)];0
[Move(E), Move(W), Move(W)];0
[Move(E), Move(W), Move(W)];0
[Move(E), Move(N), Move(W)];0
[Move(E), Move(N), Move(W)];0
[Move(N), Move(N), Pull(S,N)];10
[Move(N), Move(N), Pull(S,N)];1
[Move(N), Move(N), Pull(W,N)];0
[Move(N), Move(N), Pull(S,E)];0
[Move(N), Move(W), Push(N,W)];0
[Move(N), Move(W), Push(W,W)];1
[Move(E), Pull(E,W), Push(W,S)];8
[Pull(W,E), Pull(E,W), Push(S,W)];7
[Pull(S,E), Pull(S,W), Push(W,S)];0
[Pull(W,N), Pull(S,N), Push(S,W)];0
[Pull(S,E), Pull(E,N), Push(W,W)];0
[Push(N,W), Push(W,S), Push(W,S)];1
[Push(W,W), Push(S,S), Push(S,S)];0
[Push(W,W), Push(S,S), Push(S,S)];0
[Push(W,W), Push(S,E), Push(S,W)];0
[Push(W,S), Push(E,S), Push(W,W)];1
[Push(S,S), Push(S,E), NoOp];0
[Push(S,S), NoOp, Move(N)];1
[Push(S,S), NoOp, Move(N)];1
[Push(S,S), NoOp, Move(N)];0
[Push(S,W), NoOp, NoOp];1
[Push(W,S), Push(E,N), Move(W)];0
[Push(S,S), Push(N,N), Move(S)];0
[Push(S,S), Pull(E,N), NoOp];3
[Push(S,S), Pull(E,W), Move(E)];1
[Push(S,S), Pull(E,W), NoOp];0
[Push(S,S), Pull(S,W), Move(W)];1
[Push(S,S), Pull(W,N), Move(S)];0
[NoOp, Push(E,E), Push(S,W)];1
[NoOp, Push(E,S), Push(W,S)];1
[NoOp, Push(S,S), Push(S,S)];0
[NoOp, Push(S,S), Push(S,S)];0
[NoOp, Push(S,S), Move(N)];1
[NoOp, Push(S,S), Move(N)];1
[NoOp, Move(N), Move(E)];1
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(E), Move(N)];1
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];1
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];1
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(E), Move(E)];0
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), Move(N)];1
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(E), Move(N)];0
[NoOp, Move(E), Move(N)];1
[NoOp, NoOp, Move(N)];0
[NoOp, Pull(W,E), Push(N,W)];10
[NoOp, Pull(W,E), Push(W,W)];0
[NoOp, Pull(S,E), Move(S)];1
[NoOp, Pull(S,N), Move(W)];0
[NoOp, Pull(S,N), Move(W)];1
[NoOp, Pull(W,N), Move(W)];0
[NoOp, Pull(S,E), Move(W)];0
[NoOp, Pull(S,N), Move(W)];0
[NoOp, Pull(W,N), Move(W)];0
[NoOp, Pull(W,E), Move(W)];0
[NoOp, Pull(W,E), Move(W)];0
[NoOp, Pull(N,E), Move(W)];0
[NoOp, Push(S,W), Move(W)];0
[NoOp, Push(W,S), Move(S)];0
[NoOp, Push(S,W), Move(W)];1
[NoOp, Push(W,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];1
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];1
[NoOp, NoOp, Move(W)];0
[NoOp, Pull(N,S), Move(W)];2
[NoOp, Pull(N,S), Move(W)];0
[NoOp, Pull(N,S), Move(N)];1
[NoOp, Pull(N,S), Pull(S,N)];15
[NoOp, Pull(N,S), Pull(S,N)];0
[NoOp, Pull(W,S), Pull(S,N)];0
[NoOp, Push(E,N), Pull(S,N)];0
[NoOp, Pull(S,N), Pull(S,N)];2
[NoOp, Pull(E,N), Pull(S,N)];1
[NoOp, Push(W,S), Pull(E,N)];0
[NoOp, Push(S,S), Pull(S,W)];1
[NoOp, Push(S,S), Pull(E,N)];0
[NoOp, Push(S,S), Pull(N,W)];0
[NoOp, Push(S,S), Push(S,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, Pull(N,S), Push(E,E)];1
[NoOp, Pull(N,S), Push(E,E)];0
[NoOp, Pull(N,S), Push(E,S)];1
[NoOp, Pull(N,S), Push(S,S)];0
[NoOp, Pull(W,S), Push(S,S)];0
[NoOp, Push(E,N), Move(N)];0
[NoOp, Push(N,N), Move(N)];0
[NoOp, Pull(S,N), Move(E)];1
[NoOp, Pull(W,N), Move(E)];1
[NoOp, Push(E,S), Move(E)];0
[NoOp, Push(S,S), Move(E)];0
[NoOp, Push(S,S), Move(E)];1
[NoOp, Push(S,S), Move(E)];0
[NoOp, Push(S,S), Move(N)];0
[NoOp, NoOp, Move(E)];1
[NoOp, Pull(N,S), Move(E)];1
[NoOp, Pull(N,S), Move(E)];1
[NoOp, Pull(N,S), Move(E)];0
[NoOp, Pull(N,S), Move(E)];0
[NoOp, Pull(N,S), Move(E)];0
[NoOp, Pull(E,S), Move(E)];1
[NoOp, Push(W,N), Move(E)];0
[NoOp, Pull(E,N), Move(N)];1
[NoOp, Push(W,S), Move(N)];1
[NoOp, Push(S,S), Move(N)];0
[NoOp, Push(S,S), Move(N)];0
[NoOp, Push(S,S), Move(N)];0
[NoOp, Push(S,S), Move(N)];1
[NoOp, Push(S,S), Move(N)];0
[NoOp, NoOp, Pull(S,E)];1
[NoOp, Pull(N,S), Pull(S,N)];1
[NoOp, Pull(N,S), Push(N,W)];0
[NoOp, Pull(N,S), Push(W,W)];0
[NoOp, Pull(N,S), Push(W,W)];1
[NoOp, Pull(N,S), NoOp];0
[NoOp, Pull(W,S), NoOp];1
[Move(N), Push(E,N), NoOp];0
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(E), NoOp, NoOp];1
[Move(E), NoOp, NoOp];0
[Move(E), NoOp, NoOp];0
[Move(E), NoOp, NoOp];1
[Move(E), NoOp, NoOp];0
[Move(E), NoOp, NoOp];0
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];0
[Move(N), NoOp, NoOp];1
[Move(N), NoOp, NoOp];0
[Move(E), NoOp, NoOp];1
[Pull(W,E), NoOp, NoOp];7
[Pull(S,E), NoOp, NoOp];0
[Pull(S,N), NoOp, NoOp];1
[Pull(W,N), NoOp, NoOp];1
[Pull(N,E), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];2
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,W), NoOp, NoOp];0
[Push(W,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[NoOp, Pull(S,N), Move(S)];1
[NoOp, Pull(E,N), Move(W)];1
[NoOp, Push(W,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Push(S,S), Move(W)];0
[NoOp, Move(N), Move(W)];1
[NoOp, Move(N), Move(W)];0
[NoOp, Move(N), Move(W)];0
[NoOp, Move(N), Move(W)];0
[NoOp, Move(E), Move(W)];0
[NoOp, Move(E), Move(W)];1
[NoOp, Move(E), Move(W)];0
[NoOp, Move(E), Move(W)];0
[NoOp, Move(E), Move(W)];0
[NoOp, Move(E), Move(W)];0
[NoOp, Move(N), Move(W)];0
[NoOp, Move(N), Move(W)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Pull(E,W)];1
[NoOp, Move(N), Pull(S,W)];0
[NoOp, Move(N), Push(N,E)];0
[NoOp, Move(N), Move(S)];1
[Move(N), Move(E), Move(E)];0
[Move(N), Move(E), Move(E)];0
[Move(N), NoOp, Move(E)];103
[Move(N), NoOp, Move(S)];1
[Move(N), NoOp, Move(E)];0
[Move(N), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];1
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];1
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(E)];0
[Move(W), NoOp, Move(N)];0
[Move(W), NoOp, Push(N,W)];6
[Move(W), NoOp, Push(W,W)];0
[Move(W), NoOp, Push(W,S)];0
[Move(W), NoOp, Push(S,S)];0
[Move(W), NoOp, Push(S,W)];0
[Move(N), NoOp, Push(W,W)];0
[Move(N), NoOp, Push(W,S)];0
[Move(N), NoOp, Push(S,S)];1
[Move(N), NoOp, Push(S,S)];0
[Move(N), NoOp, Push(S,S)];0
[Move(N), NoOp, Push(S,S)];0
[Move(N), NoOp, Push(S,S)];0
[Move(N), NoOp, Push(S,S)];0
[Move(W), NoOp, Push(S,S)];0
[Pull(E,W), NoOp, Push(S,S)];20
[Pull(E,W), NoOp, NoOp];1
[Pull(S,W), NoOp, NoOp];0
[Pull(S,N), NoOp, NoOp];1
[Pull(S,N), NoOp, NoOp];0
[Pull(E,N), NoOp, NoOp];1
[Pull(S,W), NoOp, NoOp];0
[Pull(S,N), NoOp, NoOp];0
[Pull(E,N), NoOp, NoOp];1
[Pull(E,W), NoOp, NoOp];0
[Pull(E,W), NoOp, NoOp];1
[Push(W,S), NoOp, NoOp];0
[Push(S,E), NoOp, NoOp];1
[Push(E,S), NoOp, NoOp];0
[Push(S,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,S), NoOp, NoOp];0
[Push(S,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];0
[Push(E,E), NoOp, NoOp];1
[Push(E,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];1
[Push(S,S), NoOp, NoOp];0
[Push(S,S), NoOp, NoOp];0
[NoOp, Pull(W,E), NoOp];7
[NoOp, Pull(W,E), NoOp];1
[NoOp, Pull(S,E), NoOp];0
[NoOp, Pull(S,N), NoOp];1
[NoOp, Pull(W,N), NoOp];0
[NoOp, Push(E,S), NoOp];1
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];1
[NoOp, Push(S,W), NoOp];0
[NoOp, Push(W,S), NoOp];0
[NoOp, Push(S,S), NoOp];1
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,W), NoOp];1
[NoOp, Push(W,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];1
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), Move(N)];1
[NoOp, Move(N), Move(N)];0
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), Move(E)];0
[NoOp, Move(N), Move(E)];0
[NoOp, NoOp, Move(N)];0
[NoOp, Move(W), Move(N)];1
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];0
[NoOp, Move(W), Move(N)];1
[NoOp, Move(W), Pull(S,N)];4
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(S,N)];0
[NoOp, Move(W), Pull(W,N)];1
[NoOp, Move(W), Push(E,S)];0
[NoOp, Move(W), Push(S,E)];0
[NoOp, Move(W), Push(E,S)];0
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), Push(S,S)];1
[NoOp, Move(W), Push(S,S)];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Move(N), NoOp];1
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];1
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];0
[NoOp, Move(N), NoOp];1
[NoOp, Move(W), NoOp];0
[NoOp, Move(W), NoOp];0
[NoOp, Pull(E,W), NoOp];30
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(S,W), NoOp];1
[NoOp, Pull(E,N), NoOp];0
[NoOp, Pull(S,W), NoOp];0
[NoOp, Pull(E,N), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(S,W), NoOp];0
[NoOp, Pull(E,N), NoOp];1
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(S,W), NoOp];0
[NoOp, Pull(E,N), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(E,W), NoOp];0
[NoOp, Pull(E,W), NoOp];1
[NoOp, Pull(S,W), NoOp];0
[NoOp, Push(N,E), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,E), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,E), NoOp];1
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];1
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,E), NoOp];0
[NoOp, Push(E,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];0
[NoOp, Push(S,S), NoOp];1
[NoOp, Push(S,S), Move(N)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];1
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(W)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];1
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Move(N)];0
[NoOp, NoOp, Pull(W,N)];21
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,S)];0
[NoOp, NoOp, Push(S,S)];0
[NoOp, NoOp, Push(S,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,E)];1
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,E)];0
[NoOp, NoOp, Push(E,S)];0
[NoOp, NoOp, Push(S,S)];0
[NoOp, NoOp, Push(S,S)];0
1e1371aee37419ef435f269df490828db40b872c
successful
902
661
b8f5453c92c16532c95525847b63a1f876380bda
1495032363171
